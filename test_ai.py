#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ AI —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tutor_crm.settings')
django.setup()

from tutor_crm.core.ai_services import AITutorService
from tutor_crm.core.models import Student

def test_ai_service():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI —Å–µ—Ä–≤–∏—Å–∞"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ 6 –∫–ª–∞—Å—Å–∞")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É—á–µ–Ω–∏–∫–∞
    student, created = Student.objects.get_or_create(
        name="–¢–µ—Å—Ç–æ–≤—ã–π —É—á–µ–Ω–∏–∫",
        defaults={
            'school': "–¢–µ—Å—Ç–æ–≤–∞—è —à–∫–æ–ª–∞",
            'grade': "6 –∫–ª–∞—Å—Å",
            'goal': "–ò–∑—É—á–µ–Ω–∏–µ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏"
        }
    )
    
    ai_service = AITutorService()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–µ–º
    test_topics = [
        "–¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –¥—Ä–æ–±–∏",
        "–ø—Ä–æ—Ü–µ–Ω—Ç—ã", 
        "–ø—Ä–æ–ø–æ—Ä—Ü–∏–∏",
        "–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–∞—è –ø–ª–æ—Å–∫–æ—Å—Ç—å",
        "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞"
    ]
    
    print("\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —É—Ä–æ–∫–æ–≤:")
    print("-" * 40)
    
    for topic in test_topics:
        print(f"\nüéØ –¢–µ–º–∞: {topic}")
        prompt = f"–°–ø–ª–∞–Ω–∏—Ä—É–π —É—Ä–æ–∫ –ø–æ —Ç–µ–º–µ {topic}"
        result = ai_service.plan_lesson(student, topic)
        
        if result and 'title' in result:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ç–µ–º–∞: {result['title']}")
            print(f"üìö –¶–µ–ª–∏: {', '.join(result['objectives'][:2])}...")
            print(f"‚è∞ –°—Ç—Ä—É–∫—Ç—É—Ä–∞: {len(result['structure'])} —ç—Ç–∞–ø–æ–≤")
        else:
            print(f"‚ùå –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π:")
    print("-" * 40)
    
    for topic in test_topics:
        print(f"\nüéØ –¢–µ–º–∞: {topic}")
        prompt = f"–°–æ–∑–¥–∞–π –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –ø–æ —Ç–µ–º–µ {topic}"
        result = ai_service.generate_homework(student, topic)
        
        if result and 'title' in result:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –î–ó: {result['title']}")
            if 'tasks' in result:
                print(f"üìã –ó–∞–¥–∞–Ω–∏–π: {len(result['tasks'])}")
                for task in result['tasks'][:2]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2 –∑–∞–¥–∞–Ω–∏—è
                    print(f"   ‚Ä¢ {task['task']}")
        else:
            print(f"‚ùå –î–ó –Ω–µ —Å–æ–∑–¥–∞–Ω–æ –∏–ª–∏ –æ—à–∏–±–∫–∞")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:")
    print("-" * 40)
    
    result = ai_service.analyze_student_progress(student)
    if result and 'progress_summary' in result:
        print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ —Å–æ–∑–¥–∞–Ω: {result['progress_summary'][:100]}...")
    else:
        print("‚ùå –ê–Ω–∞–ª–∏–∑ –Ω–µ —Å–æ–∑–¥–∞–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞")
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_ai_service() 